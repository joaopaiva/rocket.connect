volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  evolution_local_store: {}
  evolution_local_instances: {}
  local_wppconnect_data: {}
  local_wppconnect_tokens: {}
  local_rocket_mongodb_data: {}

services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: rocketconnect_local_django
    #container_name: rocketconnect_local_django
    depends_on:
      - postgres
      - redis
      - mailpit
    volumes:
      - .:/app:z
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    #ports:
    #  - '8000:8000'
    command: /start
    networks:
       default:
          aliases:
            - django.local
  postgres:
    build:
      context: .
      dockerfile: ./compose/production/postgres/Dockerfile
    image: rocketconnect_production_postgres
    #container_name: rocketconnect_local_postgres
    #ports:
    #  - "5432:5432"
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres

  docs:
    image: rocketconnect_local_docs
    #container_name: rocketconnect_local_docs
    build:
      context: .
      dockerfile: ./compose/local/docs/Dockerfile
    env_file:
      - ./.envs/.local/.django
    volumes:
      - ./docs:/docs:z
      - ./config:/app/config:z
      - ./rocket_connect:/app/rocket_connect:z
    #ports:
    #  - '9000:7000'
    command: /start-docs

  mailpit:
    image: docker.io/axllent/mailpit:latest
    #container_name: rocketconnect_local_mailpit
    #ports:
    #  - "8025:8025"

  redis:
    image: docker.io/redis:6
    #container_name: rocketconnect_local_redis

  celeryworker:
    <<: *django
    image: rocketconnect_local_celeryworker
    #container_name: rocketconnect_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: rocketconnect_local_celerybeat
    #container_name: rocketconnect_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: rocketconnect_local_flower
    #container_name: rocketconnect_local_flower
    #ports:
    #  - '5555:5555'
    command: /start-flower

  evolution:
    #image: atendai/evolution-api:v2.0.10
    image: atendai/evolution-api:v1.8.2
    restart: always
    #ports:
    #  - 8084:8080
    volumes:
      - evolution_local_instances:/evolution/instances
      - evolution_local_store:/evolution/store
    env_file:
      - ./compose/local/evolution/env
    command: ['node', './dist/src/main.js']

  wppconnect:
    image: wppconnect/server-cli:main
    # for some reason, the server-cli is not working properly
    # in mac, so build it locally and use it here:
    #image: server-cli-local
    # for command options: https://github.com/wppconnect-team/server-cli/blob/main/src/program.js
    command: wppserver --startAllSession
    volumes:
      - local_wppconnect_data:/usr/src/server-cli/userDataDir
      - local_wppconnect_tokens:/usr/src/server-cli/tokens
    #ports:
    #  - "21465:21465"

  #rocketchat-compose.yml
  rocketchat:
    image: registry.rocket.chat/rocketchat/rocket.chat:${RELEASE:-5.4.8-alpine}
    restart: on-failure
    environment:
      MONGO_URL: "${MONGO_URL:-\
        mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/\
          ${MONGODB_DATABASE:-rocketchat}?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
      MONGO_OPLOG_URL: "${MONGO_OPLOG_URL:\
        -mongodb://${MONGODB_ADVERTISED_HOSTNAME:-mongodb}:${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}/\
          local?replicaSet=${MONGODB_REPLICA_SET_NAME:-rs0}}"
      ROOT_URL: ${ROOT_URL:-http://localhost:${HOST_PORT:-3000}}
      PORT: ${PORT:-3000}
      ADMIN_USERNAME: adminrc
      ADMIN_PASS: admin
      ADMIN_EMAIL: admin@example.com
      OVERWRITE_SETTING_Accounts_TwoFactorAuthentication_Enforce_Password_Fallback: "false"
      OVERWRITE_SETTING_SMTP_Host: mailpit
      OVERWRITE_SETTING_SMTP_Port: 1025
      OVERWRITE_SETTING_From_Email: from@email.com
      OVERWRITE_SETTING_API_Enable_Rate_Limiter: "false"
      OVERWRITE_SETTING_Livechat_validate_offline_email: "false"
      OVERWRITE_SETTING_CREATE_TOKENS_FOR_USERS: "true"
      OVERWRITE_SETTING_Accounts_SystemBlockedUsernameList: administrator,system,user
      OVERWRITE_SETTING_Apps_Framework_Development_Mode: "true"
      OVERWRITE_SETTING_Prometheus_Enabled: "true"
      OVERWRITE_SETTING_Accounts_ShowFormLogin: "true"
      OVERWRITE_SETTING_Show_Setup_Wizard: "completed"
    depends_on:
      - mongodb
    expose:
      - ${PORT:-3000}
    #ports:
    #  - host_ip: ${BIND_IP:-0.0.0.0}
    #    target: ${PORT:-3000}
    #    published: ${HOST_PORT:-3000}
    #    protocol: tcp
    #    mode: host

  mongodb:
    image: docker.io/bitnami/mongodb:${MONGODB_VERSION:-4.4}
    restart: on-failure
    volumes:
      - local_rocket_mongodb_data:/bitnami/mongodb
      #- ./mongodb_version/5.4.3:/bitnami/mongodb
      #- ./mongodb_version/5.4.1:/bitnami/mongodb
      #- ./mongodb_version/6.0.0:/bitnami/mongodb
    environment:
      MONGODB_REPLICA_SET_MODE: primary
      MONGODB_REPLICA_SET_NAME: ${MONGODB_REPLICA_SET_NAME:-rs0}
      MONGODB_PORT_NUMBER: ${MONGODB_PORT_NUMBER:-27017}
      MONGODB_INITIAL_PRIMARY_HOST: ${MONGODB_INITIAL_PRIMARY_HOST:-mongodb}
      MONGODB_INITIAL_PRIMARY_PORT_NUMBER: ${MONGODB_INITIAL_PRIMARY_PORT_NUMBER:-27017}
      MONGODB_ADVERTISED_HOSTNAME: ${MONGODB_ADVERTISED_HOSTNAME:-mongodb}
      MONGODB_ENABLE_JOURNAL: ${MONGODB_ENABLE_JOURNAL:-true}
      ALLOW_EMPTY_PASSWORD: ${ALLOW_EMPTY_PASSWORD:-yes}
    #ports:
    #  - 27017:27017

    
